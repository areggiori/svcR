
R : Copyright 2006, The R Foundation for Statistical Computing
Version 2.3.0 (2006-04-24)
ISBN 3-900051-07-0

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

> ### * <HEADER>
> ###
> attach(NULL, name = "CheckExEnv")
> assign(".CheckExEnv", as.environment(2), pos = length(search())) # base
> ## add some hooks to label plot pages for base and grid graphics
> setHook("plot.new", ".newplot.hook")
> setHook("persp", ".newplot.hook")
> setHook("grid.newpage", ".gridplot.hook")
> 
> assign("cleanEx",
+        function(env = .GlobalEnv) {
+ 	   rm(list = ls(envir = env, all.names = TRUE), envir = env)
+            RNGkind("default", "default")
+ 	   set.seed(1)
+    	   options(warn = 1)
+ 	   delayedAssign("T", stop("T used instead of TRUE"),
+ 		  assign.env = .CheckExEnv)
+ 	   delayedAssign("F", stop("F used instead of FALSE"),
+ 		  assign.env = .CheckExEnv)
+ 	   sch <- search()
+ 	   newitems <- sch[! sch %in% .oldSearch]
+ 	   for(item in rev(newitems))
+                eval(substitute(detach(item), list(item=item)))
+ 	   missitems <- .oldSearch[! .oldSearch %in% sch]
+ 	   if(length(missitems))
+ 	       warning("items ", paste(missitems, collapse=", "),
+ 		       " have been removed from the search path")
+        },
+        env = .CheckExEnv)
> assign("..nameEx", "__{must remake R-ex/*.R}__", env = .CheckExEnv) # for now
> assign("ptime", proc.time(), env = .CheckExEnv)
> grDevices::postscript("svcR-Ex.ps")
> assign("par.postscript", graphics::par(no.readonly = TRUE), env = .CheckExEnv)
> options(contrasts = c(unordered = "contr.treatment", ordered = "contr.poly"), pager="console")
> options(warn = 1)    
> library('svcR')
Le chargement a nécessité le package : spdep
Le chargement a nécessité le package : tripack
Le chargement a nécessité le package : maptools
Le chargement a nécessité le package : foreign
Le chargement a nécessité le package : sp
Le chargement a nécessité le package : SparseM
[1] "SparseM library loaded"
Le chargement a nécessité le package : boot
Le chargement a nécessité le package : quadprog
Le chargement a nécessité le package : ade4
> 
> assign(".oldSearch", search(), env = .CheckExEnv)
> assign(".oldNS", loadedNamespaces(), env = .CheckExEnv)
> cleanEx(); ..nameEx <- "svcR"
> 
> ### * svcR
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: findModelCluster
> ### Title: Computation of clustering model by support vector machine
> ### Aliases: findModelCluster
> ### Keywords: cluster
> 
> ### ** Examples
> 
> 
> ## exemple with iris data
> 
> MetOpt  = 1;    # optimisation method with randomization
> MetLab  = 1;    # grid labelling
> Nu      = 0.5; 
> q       = 40;   # lot of clusters
> K       = 1;    # only 1  nearest neighbour for clustering
> Cx = Cy = 0; # we use principal component analysis factors
> G       = 15; # size of the grid for cluster labelling
> DName   = "iris";
> fileIn  = ""; # fileIn migth be such as "D:/R/library/svc/", if NULL it will work on iris data
> 
> findModelCluster(MetOpt, MetLab, Nu, q, K, G, Cx, Cy, DName, fileIn); 
 loading matrix... 		 ok 
 two-feature selection... 	 ok 
 min max calculation... 	 ok 
 kernel matrix... 		 ok 
 lagrange coefficients... 	 ok 
 radius computation... 		 ok 
 grid labeling... 
		 grid clustering... 	 ok 
		 match grid... 		 ok 
		 evaluation... 		 ok 
				 ok 
 export... 			 ok 
 display... 			 ok 
[1] "time consuming"
[1] 210.48   0.31 212.87     NA     NA
[1] "end-of-routine"
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", env = .CheckExEnv),"\n")
Time elapsed:  213.56 0.45 216.1 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
